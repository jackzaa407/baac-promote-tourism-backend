# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: npm install
      - run: npm run build --if-present
      - run: npm test
        env:
          CI: true
      - uses: actions/checkout@v1
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Get the version
        id: vars
        run: echo ::set-output name=docker_tag::$(echo ${GITHUB_REF} | cut -d'/' -f3)-${GITHUB_SHA}
      - name: Build the tagged Docker image
        run: docker build . --file Dockerfile --tag tanaput19/baac-promote-tourism:${{ steps.vars.outputs.docker_tag }}
      - name: Push the tagged Docker image
        run: docker push tanaput19/baac-promote-tourism:${{ steps.vars.outputs.docker_tag }}
      - name: Build the latest Docker image
        run: docker build -t tanaput19/baac-promote-tourism:latest .
      - name: Push the latest Docker image
        run: docker push tanaput19/baac-promote-tourism:latest
      - name: executing remote ssh commands using ssh key
        uses: garygrossgarten/github-action-ssh@release
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          privateKey: ${{ secrets.PRI_KEY }}
          command: |
            docker-compose down
            docker-compose pull
            docker-compose up -d
